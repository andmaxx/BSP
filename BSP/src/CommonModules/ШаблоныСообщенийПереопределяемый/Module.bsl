///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2019, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Определяет состав назначений и общие реквизиты в шаблонах сообщений 
//
// Параметры:
//  Настройки - Структура - Структура с ключами:
//    * ПредметыШаблонов - ТаблицаЗначений - Содержит варианты предметов для шаблонов. Колонки:
//         ** Имя           - Строка - Уникальное имя назначения.
//         ** Представление - Строка - Представление варианта.
//         ** Макет         - Строка - Имя макета СКД, если состав реквизитов определяется посредством СКД.
//         ** ЗначенияПараметровСКД - Структура - Значения параметров СКД для текущего предмета шаблона сообщения.
//    * ОбщиеРеквизиты - ТаблицаЗначений - Содержит описание общих реквизитов доступных во всех шаблонах. Колонки:
//         ** Имя            - Строка - Уникальное имя общего реквизита.
//         ** Представление  - Строка - Представление общего реквизита.
//         ** Тип            - Тип    - Тип общего реквизита. По умолчанию строка.
//    * ИспользоватьПроизвольныеПараметры  - Булево - указывает, можно ли использовать произвольные пользовательские
//                                                    параметры в шаблонах сообщений.
//    * ЗначенияПараметровСКД - Структура - Общие значения параметров СКД, для всех макетов, где состав реквизитов
//                                          определяется средствами СКД.
//
Процедура ПриОпределенииНастроек(Настройки) Экспорт
	
	// _Демо начало примера
	Настройки.ИспользоватьПроизвольныеПараметры = Истина;
	Настройки.ЗначенияПараметровСКД.Вставить("ОбращениеМужскойРод", НСтр("ru='Уважаемый'"));
	Настройки.ЗначенияПараметровСКД.Вставить("ОбращениеЖенскийРод", НСтр("ru='Уважаемая'"));
	
	// Определение шаблонов
	//Предмет = Настройки.ПредметыШаблонов.Добавить();
	//Предмет.Имя = "ОповещениеКлиентаИзменениеЗаказа";
	//Предмет.Представление = НСтр("ru = 'Оповещение клиента ""Изменение заказа""'");
	//Предмет.Макет = "ДанныеШаблонаСообщений";
	//Предмет = Настройки.ПредметыШаблонов.Найти("ОповещениеКлиентаИзменениеЗаказа", "Имя");
	//Предмет.ЗначенияПараметровСКД.Вставить("ОбращениеПолНеопределен", НСтр("ru='Уважаемый(ая)'"));
	
	Предмет = Настройки.ПредметыШаблонов.Найти(Метаданные.Документы._ЗаявкаНаОплату.ПолноеИмя(), "Имя");
	Предмет.ЗначенияПараметровСКД.Вставить("ОбращениеПолНеопределен", НСтр("ru='Уважаемый(ая)'"));
	
	// Определение общих реквизитов для всех шаблонов
	НовыйРеквизит = Настройки.ОбщиеРеквизиты.Строки.Добавить();
	НовыйРеквизит.Имя = "ОбратныйАдрес";
	НовыйРеквизит.Представление = НСтр("ru = 'Обратный адрес'");
	НовыйРеквизит.Тип = Тип("Строка");
	
	//НовыйРеквизит = Настройки.ОбщиеРеквизиты.Строки.Добавить();
	//НовыйРеквизит.Имя = "ОсновнаяОрганизация";
	//НовыйРеквизит.Представление = НСтр("ru = 'Основная организация'");
	//НовыйРеквизит.Тип = Тип("СправочникСсылка._ДемоОрганизации");
	// _Демо конец примера

	
	
КонецПроцедуры

// Вызывается при подготовке шаблонов сообщений и позволяет переопределить список реквизитов и вложений.
//
// Параметры:
//  Реквизиты               - ДеревоЗначений - список реквизитов шаблона.
//         ** Имя            - Строка - Уникальное имя общего реквизита.
//         ** Представление  - Строка - Представление общего реквизита.
//         ** Тип            - Тип    - Тип реквизита. По умолчанию строка.
//         ** Подсказка      - Строка - Расширенная информация о реквизите.
//         ** Формат         - Строка - Формат вывода значения для чисел, дат, строк и булевых значений.
//  Вложения                - ТаблицаЗначений - печатные формы и вложения
//         ** Имя            - Строка - Уникальное имя вложения.
//         ** Представление  - Строка - Представление варианта.
//         ** Подсказка      - Строка - Расширенная информация о вложении.
//         ** ТипФайла       - Строка - Тип вложения, который соответствует расширению файла: "pdf", "png", "jpg", mxl"
//                                      и др.
//  НазначениеШаблона       - Строка  - Имя назначения шаблон сообщения.
//  ДополнительныеПараметры - Структура - дополнительные сведения о шаблоне сообщения.
//
Процедура ПриПодготовкеШаблонаСообщения(Реквизиты, Вложения, НазначениеШаблона, ДополнительныеПараметры) Экспорт
	
	//// _Демо начало примера
	//ДополнительныеПараметры.РазворачиватьСсылочныеРеквизиты = Ложь;
	//
	//Если НазначениеШаблона = "Документ._ЗаявкаНаОплату"  Тогда
	//	
	//	Если ДополнительныеПараметры.ТипШаблона = "Письмо" Тогда
	//		НовыйРеквизит = Реквизиты.Добавить();
	//		НовыйРеквизит.Имя = "КнопкаДляОплатыЯндексКасса";
	//		НовыйРеквизит.Представление = НСтр("ru = 'Кнопка для оплаты Яндекс.Касса'");
	//		Если ДополнительныеПараметры.ФорматПисьма = Перечисления.СпособыРедактированияЭлектронныхПисем.HTML Тогда
	//			КартинкаКнопки = Вложения.Добавить();
	//			КартинкаКнопки.Идентификатор = "КартинкаКнопкиДляОплатыЯндексКасса";
	//			КартинкаКнопки.Имя = "КартинкаКнопкиДляОплатыЯндексКасса";
	//			КартинкаКнопки.Представление = НСтр("ru = 'Кнопка для оплаты Яндекс.Касса'");
	//			КартинкаКнопки.ТипФайла = "jpg";
	//			КартинкаКнопки.Реквизит = "КнопкаДляОплатыЯндексКасса";
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЕсли;
	//
	//Если НазначениеШаблона = "ОповещениеКлиентаИзменениеЗаказа" Тогда
	//	ШаблоныСообщений.СформироватьСписокРеквизитовПоСКД(Реквизиты, Документы._ДемоЗаказПокупателя.ПолучитьМакет("ДанныеШаблонаСообщений"));
	//КонецЕсли;
	//
	//// _Демо конец примера

	///////++++ НК 19.02.21 
	/////// Создаем новый реквизит "РазбивкаПоСтатьям"
	НовыйРеквизит = Реквизиты.Добавить();
	НовыйРеквизит.Имя = "РазбивкаПоСтатьям";
	НовыйРеквизит.Представление = НСтр("ru = 'Разбивка по статьям'");
	НовыйРеквизит.Тип = Новый ОписаниеТипов("Строка");	
КонецПроцедуры

// Вызывается в момент создания сообщений по шаблону для заполнения значений реквизитов и вложений.
//
// Параметры:
//  Сообщение - Структура - структура с ключами:
//    * ЗначенияРеквизитов - Соответствие - список используемых в шаблоне реквизитов.
//      ** Ключ     - Строка - имя реквизита в шаблоне;
//      ** Значение - Строка - значение заполнения в шаблоне.
//    * ЗначенияОбщихРеквизитов - Соответствие - список используемых в шаблоне общих реквизитов.
//      ** Ключ     - Строка - имя реквизита в шаблоне;
//      ** Значение - Строка - значение заполнения в шаблоне.
//    * Вложения - Соответствие - значения реквизитов 
//      ** Ключ     - Строка - имя вложения в шаблоне;
//      ** Значение - ДвоичныеДанные, Строка - двоичные данные или адрес во временном хранилище вложения.
//    * ДополнительныеПараметры - Структура - Дополнительные параметры сообщения. 
//  НазначениеШаблона - Строка -  полное имя назначения шаблон сообщения.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//  ПараметрыШаблона - Структура -  Дополнительная информация о шаблоне сообщения.
//
Процедура ПриФормированииСообщения(Сообщение, НазначениеШаблона, ПредметСообщения, ПараметрыШаблона) Экспорт
	
	///////++++ НК 19.02.21 
	////////////////////Заполняем реквизит "РазбивкаПоСтатьям" из ТЧ ЗаявкиНаОплату, 
	//Док = Документы._ЗаявкаНаОплату.НайтиПоНомеру(Сообщение.ЗначенияРеквизитов["Номер"]);
	//Сообщение.ЗначенияРеквизитов["РазбивкаПоСтатьям"] = "--------------------------------------------------------------" + "<br><br>";
	//Если Сообщение.ЗначенияРеквизитов["МассивСтрок"] <>неопределено тогда
	//	Для каждого Строка из Сообщение.ЗначенияРеквизитов["МассивСтрок"] Цикл
	//		Сообщение.ЗначенияРеквизитов["РазбивкаПоСтатьям"] = Сообщение.ЗначенияРеквизитов["РазбивкаПоСтатьям"] + "#"+ Строка.НомерСтроки + " ";
	//		Если ЗначениеЗаполнено(Строка.ЦФО) Тогда
	//			Сообщение.ЗначенияРеквизитов["РазбивкаПоСтатьям"] = Сообщение.ЗначенияРеквизитов["РазбивкаПоСтатьям"] + "<b> ЦФО : </b>" + Строка.ЦФО + ",";
	//		КонецЕсли;
	//		Если ЗначениеЗаполнено(Строка.Подразделение) Тогда
	//			 Сообщение.ЗначенияРеквизитов["РазбивкаПоСтатьям"] = Сообщение.ЗначенияРеквизитов["РазбивкаПоСтатьям"] +  "<b> Подразделение : </b>" + Строка.Подразделение + ",";
	//		КонецЕсли;
	//		Если ЗначениеЗаполнено(Строка.СтатьяДДС) Тогда
	//			 Сообщение.ЗначенияРеквизитов["РазбивкаПоСтатьям"] = Сообщение.ЗначенияРеквизитов["РазбивкаПоСтатьям"] + "<b> СтатьяДДС : </b>" + Строка.СтатьяДДС + ","; 
	//		КонецЕсли;
	//		Если ЗначениеЗаполнено(Строка.Сумма) Тогда
	//			 Сообщение.ЗначенияРеквизитов["РазбивкаПоСтатьям"] = Сообщение.ЗначенияРеквизитов["РазбивкаПоСтатьям"] + "<b> Сумма : </b>" + Строка.Сумма + ","; 
	//		КонецЕсли;
	//		Если ЗначениеЗаполнено(Строка.Комментарий) Тогда
	//			 Сообщение.ЗначенияРеквизитов["РазбивкаПоСтатьям"] = Сообщение.ЗначенияРеквизитов["РазбивкаПоСтатьям"] +  "<b> Комментарий : </b>" + Строка.Комментарий; 
	//		 КонецЕсли;
	//		Сообщение.ЗначенияРеквизитов["РазбивкаПоСтатьям"] = Сообщение.ЗначенияРеквизитов["РазбивкаПоСтатьям"] + "<br><br>"; 
	//	КонецЦикла;
	//Конецесли;
	//Сообщение.ЗначенияРеквизитов["РазбивкаПоСтатьям"] = Сообщение.ЗначенияРеквизитов["РазбивкаПоСтатьям"] + "--------------------------------------------------------------";
	//
КонецПроцедуры

// Заполняет список получателей SMS при отправке сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиSMS - ТаблицаЗначений - список получателей SMS.
//     * НомерТелефона - Строка - номер телефона, куда будет отправлено сообщение SMS.
//     * Представление - Строка - представление получателя сообщения SMS.
//     * Контакт       - Произвольный - контакт, которому принадлежит номер телефона.
//  НазначениеШаблона - Строка - идентификатор назначения шаблона
//  ПредметСообщения - ЛюбаяСсылка, Структура - ссылка на объект являющийся источником данных, либо структура,
//                                              если шаблон содержит произвольные параметры:
//    * Предмет               - ЛюбаяСсылка - ссылка на объект, являющийся источником данных;
//    * ПроизвольныеПараметры - Соответствие - заполненный список произвольных параметров.
//
Процедура ПриЗаполненииТелефоновПолучателейВСообщении(ПолучателиSMS, НазначениеШаблона, ПредметСообщения) Экспорт
	
КонецПроцедуры

// Заполняет список получателей почты при отправки сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиПисьма - ТаблицаЗначений - список получается письма.
//     * Адрес           - Строка - адрес электронной почты получателя.
//     * Представление   - Строка - представление получателя письма.
//     * Контакт         - Произвольный - контакт, которому принадлежит адрес электронной почты.
//  НазначениеШаблона - Строка - идентификатор назначения шаблона.
//  ПредметСообщения - ЛюбаяСсылка, Структура - ссылка на объект, являющийся источником данных, либо структура,
//                                              если шаблон содержит произвольные параметры:
//    * Предмет               - ЛюбаяСсылка - ссылка на объект, являющийся источником данных;
//    * ПроизвольныеПараметры - Соответствие - заполненный список произвольных параметров.
//
Процедура ПриЗаполненииПочтыПолучателейВСообщении(ПолучателиПисьма, НазначениеШаблона, ПредметСообщения) Экспорт
	
	//// _Демо начало примера
	//Если НазначениеШаблона = "ОповещениеКлиентаИзменениеЗаказа" Тогда
	//	Предмет = ?(ТипЗнч(ПредметСообщения) = Тип("Структура"), ПредметСообщения.Предмет, ПредметСообщения);
	//	СписокПолучателей = ОбщегоНазначенияКлиентСервер.АдресаЭлектроннойПочтыИзСтроки(Предмет.ЭлектроннаяПочтаСтрокой);
	//	Для каждого Получатель Из СписокПолучателей Цикл
	//		Если ПустаяСтрока(Получатель.ОписаниеОшибки) Тогда
	//			НовыйПолучатель               = ПолучателиПисьма.Добавить();
	//			НовыйПолучатель.Адрес         = Получатель.Адрес;
	//			НовыйПолучатель.Представление = Получатель.Псевдоним;
	//		КонецЕсли;
	//	КонецЦикла;
	//КонецЕсли;
	//// _Демо конец примера

	
КонецПроцедуры

#КонецОбласти

