

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	// Счет на оплату
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПлатежныйКалендарь";
	КомандаПечати.Представление = НСтр("ru = 'Платежный Календарь'");
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Не Пользователи.РолиДоступны("_ДемоПечатьНепроведенныхДокументов");
	
	//// Счет на оплату в документ Adobe PDF.
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "Заявка";
	//КомандаПечати.Представление = НСтр("ru = 'Платежный Календарь в документ Adobe PDF'");
	//КомандаПечати.Картинка = БиблиотекаКартинок.ФорматPDF;
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	//КомандаПечати.ФорматСохранения = ТипФайлаТабличногоДокумента.PDF;
	
	
КонецПроцедуры



// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр),
//                                            см. УправлениеПечатью.ПодготовитьКоллекциюПечатныхФорм.
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной
//                                                            параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной
//                                            параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ПлатежныйКалендарь");
	Если ПечатнаяФорма <> Неопределено Тогда
		ПечатнаяФорма.ТабличныйДокумент = ПечатьКалендарь(МассивОбъектов, ОбъектыПечати);
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Месячный бюджет '");
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ._КалендарныеПлатежи.ПФ_MXL";
		
	КонецЕсли;
	
КонецПроцедуры


// Конец СтандартныеПодсистемы.Печать



// Процедура печати документа.
//
// Параметры:
//  МассивОбъектов - Массив - объекты, по которым требуется сформировать печатную форму;
//  ОбъектыПечати  - СписокЗначений - разметка табличных документов по печатаемым объектам:
//   * Значение      - ЛюбаяСсылка - печатаемый объект;
//   * Представление - Строка - имя области, соответствующее объекту.
//  ИмяМакета      - Строка - "Счет" или "Заказ".
//  ВыводитьПлатежныеРеквизиты - Булево - если Истина, выводит шапку с платежными реквизитами в счете.
//
// Возвращаемое значение:
//  ТабличныйДокумент - печатная форма.
//
Функция ПечатьКалендарь(МассивОбъектов, ОбъектыПечати) Экспорт
	
	
	ТекстЗапросаДетали =  "ВЫБРАТЬ
	                      |	_КалендарныеПлатежиПлатежи.Ссылка КАК Ссылка,
	                      |	_КалендарныеПлатежиПлатежи.ДатаПлатежа КАК ДатаПлатежа,
	                      |	_КалендарныеПлатежиПлатежи.ЦФО КАК ЦФО,
	                      |	_КалендарныеПлатежиПлатежи.СтатьяДДС КАК СтатьяДДС,
	                      |	_КалендарныеПлатежиПлатежи.Примечание КАК Примечание,
	                      |	_КалендарныеПлатежиПлатежи.СуммаПлатежа КАК СуммаПлатежа,
	                      |	_КалендарныеПлатежиПлатежи.Инициатор КАК Инициатор,
	                      |	_КалендарныеПлатежиПлатежи.ТребованиеКСогласованию КАК ТребованиеКСогласованию
	                      |ИЗ
	                      |	Документ._КалендарныеПлатежи.Платежи КАК _КалендарныеПлатежиПлатежи
	                      |ГДЕ
	                      |	_КалендарныеПлатежиПлатежи.Ссылка = &Ссылка
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ДатаПлатежа" ;
	
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	_КалендарныеПлатежи.Ссылка КАК Ссылка,
	               |	_КалендарныеПлатежи.Представление КАК Представление,
	               |	_КалендарныеПлатежи.ПериодРегистрации КАК ПериодРегистрации,
	               |	_КалендарныеПлатежи.Плательщик КАК Плательщик
	               |ИЗ
	               |	Документ._КалендарныеПлатежи КАК _КалендарныеПлатежи
	               |ГДЕ
	               |	_КалендарныеПлатежи.Ссылка В(&МассивОбъектов)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "КалендарныеПлатежи";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ._КалендарныеПлатежи.ПФ_MXL_Календарь");
	
	Пока Шапка.Следующий() Цикл
		
		
		
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
				
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка"); 
		ОбластьДетали = Макет.ПолучитьОбласть("Детали");
		
		
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		Запрос = Новый Запрос(ТекстЗапросаДетали);
		Запрос.УстановитьПараметр("Ссылка", Шапка.Ссылка);
		Сч =0;
		Детали = Запрос.Выполнить().Выбрать();
		Пока Детали.Следующий() Цикл
		Сч = Сч +1;	
		
		Получатель = "";
			Список = _ОбщийМодульВызовСервера.ПолучитьСписокПолучателейСтатьиБюджета(Шапка.Ссылка,Детали.СтатьяДДС);
			Для х = 0 По  Список.Количество()-1 Цикл
			Получатель= Получатель+ Строка(Список[х].Значение)+ "; ";	
			КонецЦикла;  			

			ОбластьДетали.Параметры.Заполнить(Детали);
			ОбластьДетали.Параметры.Сч= Сч;
			ОбластьДетали.Параметры.Получатель = Получатель;
			ТабличныйДокумент.Вывести(ОбластьДетали);
		КонецЦикла;
		
		//НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			//
			//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
			//

		
	КонецЦикла;
	
	
	Возврат ТабличныйДокумент;
	
КонецФункции


Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	Поля.Добавить("Номер");
	Поля.Добавить("Дата");
	Поля.Добавить("ПериодРегистрации");
	Поля.Добавить("Плательщик");

	СтандартнаяОбработка = Ложь;

КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Наименование = "БДДС № "+ СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(Данные.Номер,"0");
	Дата  = Формат(Данные.Дата, "ДЛФ=D");
	Месяц = Формат(Данные.ПериодРегистрации, "ДФ=ММMM.yyyy");
	Плательщик = Данные.Плательщик.Наименование;
	Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = ' %1  за  %2 : %3'"), Наименование, Месяц,Плательщик);
	СтандартнаяОбработка = Ложь;

	
	
КонецПроцедуры



