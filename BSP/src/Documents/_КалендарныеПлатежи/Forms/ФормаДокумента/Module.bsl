///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2019, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

// СтандартныеПодсистемы.ОценкаПроизводительности
&НаКлиенте
Перем ИдентификаторЗамераПроведение;
// Конец СтандартныеПодсистемы.ОценкаПроизводительности

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ИнициализироватьВводПериодаРегистрации();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если ОбщегоНазначения.ЭтоМобильныйКлиент() Тогда
		Элементы.Дата.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
		Элементы.Номер.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
	КонецЕсли;
	
	Если не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Объект.Ответственный  = Пользователи.ТекущийПользователь();
	КонецЕсли;	
		
	Если  Параметры.Свойство("СтатьяДДС")Тогда
		СтатьяДДС = Параметры.СтатьяДДС;
		
	КонецЕсли;
	Если   Параметры.Свойство("ЦФО")   Тогда
		ЦФО = Параметры.ЦФО;
		
	КонецЕсли;
	Если  Параметры.Свойство("Инициатор") Тогда
		
		Инициатор= Параметры.Инициатор;
	КонецЕсли;


КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.КонтрольВеденияУчета
	КонтрольВеденияУчета.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтрольВеденияУчета
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	
	УстановитьТекущуюСтрокуПлатежа();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекущуюСтрокуПлатежа()
	
	ПараметрыОтбора = Новый Структура("СтатьяДДС,ЦФО,Инициатор",СтатьяДДС,ЦФО,Инициатор); 

  Строки = Объект.Платежи.НайтиСтроки(ПараметрыОтбора);
   Если Строки.Количество() >0 Тогда
  Элементы.Платежи.ТекущаяСтрока = Строки[0].ПолучитьИдентификатор();
  КонецЕсли;
  ////
  //Элементы.Платежи.ОтборСтрок(ПараметрыОтбора);
  //
 
КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
    
    Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
        
        ИдентификаторЗамераПроведение = ОценкаПроизводительностиКлиент.ЗамерВремени("_КалендарныеПлатежи", Истина);
						
	КонецЕсли;

	ОчиститьСообщения(); 
	_ОбщийМодульВызовСервера.ПрверкаУникальностьКП (Объект.Ссылка, Объект.ПериодРегистрации,объект.Плательщик,Отказ) ;
	ПроверкаДатыПлатежа(Отказ) ;
	ПроверкаПовторовНаСервере(Отказ);

КонецПроцедуры


&НаКлиенте

Процедура ПроверкаПовторовНаСервере(Отказ)
Для каждого Стр из объект.Платежи Цикл

	Отбор = Новый Структура("СтатьяДДС,ЦФО,Инициатор", Стр.СтатьяДДС,Стр.ЦФО,Стр.Инициатор);
	Найденные = объект.Платежи.НайтиСтроки(Отбор);
	Если Найденные.Количество() > 1 Тогда	
		
		Отказ = Истина;	
		ТекстОшибки = " Строка № "+	Стр.НомерСтроки  +  "Дата оплаты " + Формат(Стр.ДатаПлатежа,"ДФ=""dd.MM.yyyy""")+ " Такой платеж  уже существует (Статья, ЦФО, инициатор)! " ;
			
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
	 	КонецЕсли;		
КонецЦикла; 	

КонецПроцедуры



&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    
    // СтандартныеПодсистемы.ОценкаПроизводительности
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
        
        ОценкаПроизводительностиКлиент.УстановитьПризнакОшибкиЗамера(ИдентификаторЗамераПроведение, Ложь);
			
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ОценкаПроизводительности
    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПериодРегистрацииМесяцПриИзменении(Элемент)
	
	ОбновитьПериодРегистрации();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииМесяцОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииГодПриИзменении(Элемент)
	
	ОбновитьПериодРегистрации();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииГодОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПроверкаДатыПлатежа(Отказ)

	Для каждого Стр из объект.Платежи Цикл
		Если Месяц(Стр.ДатаПлатежа) <> ПериодРегистрацииМесяц  или Год(Стр.ДатаПлатежа)<>ПериодРегистрацииГод   Тогда
			ТекстОшибки = " Строка № "+	Стр.НомерСтроки  + " Дата платежа " + Формат(Стр.ДатаПлатежа,"ДЛФ=Д") + " не соответсствиет периоду регистрации плана";
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
			
			Отказ = Истина;	
			
			
		КонецЕсли;		
		КонецЦикла; 	

КонецПроцедуры



&НаКлиенте
Процедура ОбновитьПериодРегистрации()
	
	Объект.ПериодРегистрации = Дата(ПериодРегистрацииГод, ПериодРегистрацииМесяц, 1);
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьВводПериодаРегистрации()
	
	ПериодРегистрацииМесяц = Месяц(Объект.ПериодРегистрации);
	ПериодРегистрацииГод   = Год(Объект.ПериодРегистрации);
	
	СписокВыбора = Элементы.ПериодРегистрацииМесяц.СписокВыбора;
	Для Месяц = 1 По 12 Цикл
		СписокВыбора.Добавить(Месяц, Формат(Дата(1917, Месяц, 1), "ДФ=ММММ"));
	КонецЦикла;
	
	// Так как поля периода не связаны с данными напрямую, то управляем их доступностью принудительно.
	Элементы.ПериодРегистрацииМесяц.ТолькоПросмотр = ТолькоПросмотр;
	Элементы.ПериодРегистрацииГод.ТолькоПросмотр   = ТолькоПросмотр;
		
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.КонтрольВеденияУчета

&НаКлиенте
Процедура Подключаемый_ОткрытьОтчетПоПроблемам(ЭлементИлиКоманда, НавигационнаяСсылка, СтандартнаяОбработка)
	КонтрольВеденияУчетаКлиент.ОткрытьОтчетПоПроблемамОбъекта(ЭтотОбъект, Объект.Ссылка, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ПлатежиПриАктивизацииСтроки(Элемент)
	
	  УстановитьОтбор();

  КонецПроцедуры
  
  

&НаКлиенте
Процедура ПлатежиПередУдалением(Элемент, Отказ)
 ТекДанные = Элементы.Платежи.ТекущиеДанные;
    Если ТекДанные <> Неопределено Тогда
		УдалитьНасервере(ТекДанные.Ключ);
    КонецЕсли; 
	
КонецПроцедуры
&НаСервере
Процедура УдалитьНасервере(Ключ)

	 ПараметрыОтбора = Новый Структура;
    ПараметрыОтбора.Вставить("Ключ",Ключ) ;
    СтрокиУдалить = Объект.Получатели.НайтиСтроки(ПараметрыОтбора);
    Для Каждого Стр Из СтрокиУдалить Цикл
        Объект.Получатели.Удалить(Стр);
    КонецЦикла;

	

КонецПроцедуры


&НаКлиенте
Процедура ПлатежиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
 Если НоваяСтрока Тогда
        Элементы.Платежи.ТекущиеДанные.Ключ = Строка(Новый УникальныйИдентификатор);
        УстановитьОтбор();
	КонецЕсли; 
КонецПроцедуры
	
	&НаКлиенте
Процедура УстановитьОтбор()
    
    ТекДанные = Элементы.Платежи.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		Если не ЗначениеЗаполнено( ТекДанные.Ключ) тогда
		ТекДанные.Ключ = Строка(Новый УникальныйИдентификатор);
	    КонецЕсли;
	  Элементы.Получатели.ОтборСтрок = Новый ФиксированнаяСтруктура("Ключ", ТекДанные.Ключ);
    КонецЕсли; 
        
КонецПроцедуры	

&НаКлиенте
Процедура ПолучателиПриАктивизацииСтроки(Элемент)
	Если Элементы.Получатели.ТекущиеДанные <> Неопределено  тогда
		Если   Элементы.Получатели.ТекущиеДанные.Ключ <> Элементы.Платежи.ТекущиеДанные.Ключ и не Этаформа.ТолькоПросмотр Тогда
			Попытка
				Элементы.Получатели.ТекущиеДанные.Ключ = Элементы.Платежи.ТекущиеДанные.Ключ;
			Исключение
				
			КонецПопытки;	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	//Вставить содержимое обработчика
КонецПроцедуры
	


// Конец СтандартныеПодсистемы.КонтрольВеденияУчета

#КонецОбласти
